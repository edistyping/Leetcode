class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int i = 0;
        for(i = 0; i < nums.size(); i++){
           if(nums[i] >= target){
               return i; 
           }
           if(i == nums.size() - 1 && nums[i] <= target){ // checking last index
               return i+1; 
           }
       } 
        return i; 
    }
};

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int low = 0, high = A.length-1;
        while(low<=high){
            int mid = (low+high)/2;
            if(A[mid] == target) return mid;
            else if(A[mid] > target) high = mid-1;
            else low = mid+1;
        }
        return low;
    }
};
// for change
